server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  profiles:
    active:
    - testdata
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
        
  datasource:
    username: postgres
    password: postgres 
    url: jdbc:postgresql://ubuntu01:5432/postgres
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
      initializationFailTimeout: 60000     
      schema: polardb_catalog
      
  flyway:
    enabled: true
    baseline-version: 1.0
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false
    target: latest
    locations: classpath:sql/migration
    #url: jdbc:postgresql://ubuntu01:5432/postgres?currentSchema=polardb_catalog
    #user: ${spring.datasource.username}
    #password: ${spring.datasource.username}
    default-schema: polardb_catalog
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://ubuntu01.domain.local:8543/realms/PolarBookshop
    
  jpa:
    hibernate:
      ddl-auto: validate      
    generate-ddl: false    
    properties:
      hibernate:    
#        generate_statistics: true
#        dialect: org.hibernate.dialect.PostgreSQLDialect #deprecated
    show-sql: true   
    open-in-view: false            
  sql:
    init:
      platform: postgres
      mode: never   
  mandatory-file-encoding: UTF-8   
                      
management:
  endpoints:
    web:
      exposure:
        include: refresh

polar:
  greeting: Welcome to the local book catalog!