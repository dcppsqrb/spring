server:
  port: 9002
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: postgres
    password: postgres        
    url: r2dbc:postgresql://ubuntu01:5432/postgres
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
    properties:
      schema: polardb_order
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://ubuntu01:5432/postgres
    enabled: true
    baseline-version: 1.0
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false
    target: latest
    locations: classpath:sql/migration
    default-schema: polardb_order
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
      enabled: true
    function:
      definition: dispatchOrder
    stream:
      bindings:
        dispatchOrder-in-0:
          destination: order-dispatched
          group: ${spring.application.name}
        acceptOrder-out-0:
          destination: order-accepted
      rabbit:
        bindings:
          acceptOrder-out-0:
            producer:
              transacted: true      
  rabbitmq:
    host: ubuntu01
    port: 5672
    username: user
    password: password
    connection-timeout: 5s    
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://ubuntu01.domain.local:8543//realms/PolarBookshop
                
  profiles:
    active:
    - testdata
  
  mandatory-file-encoding: UTF-8     
    
  jpa:
    hibernate:
      ddl-auto: validate      
    generate-ddl: false    
    properties:
      hibernate:    
#        generate_statistics: true
#        dialect: org.hibernate.dialect.PostgreSQLDialect #deprecated
    show-sql: true   
    open-in-view: false     
       
  sql:
    init:
      platform: postgres
      mode: never   
                  
management:
  endpoints:
    web:
      exposure:
        include: refresh

    
polar:
  catalog-service-uri: "http://localhost:9001"